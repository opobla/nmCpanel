/*
 * File: app/controller/Spike.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Spike', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'navigationPanel',
            selector: '#NavigationPanel'
        },
        {
            ref: 'Spike_Candle_Panel',
            selector: '#Spike_Candle_Panel'
        },
        {
            ref: 'Spike_Channel_Panel',
            selector: '#Spike_Channel_Panel'
        }
    ],

    Launch: function() {
        this.app={}; /*TODO This name may create conflicts. */

        this.app.candle={};
        this.app.candle.panel=this.getSpike_Candle_Panel();
        this.app.candle.height=this.app.candle.panel.getHeight();
        this.app.candle.width=this.app.candle.panel.getWidth();
        this.app.candle.N_points=Math.round(this.app.candle.width/4);
        this.app.candle.mode=0;

        /*Modes*/
        /*	0-->	candle, uncorrected
        	1-->	candle, pressure corrected
            2-->	candle, efficiency corrected
        	3-->	line, uncorrected
        	4-->	line, pressure corrected
            5-->	line, efficiency corrected	*/

        this.app.channel={};
        this.app.channel.panel=this.getSpike_Channel_Panel();
        this.app.channel.height=this.app.candle.height;
        this.app.channel.width=this.app.candle.width;
        /*This panel is not expanded at this point so its weight and height are 0.*/
        /*Thats why we use the values fron the previos panel.*/

        this.loadInitialData();

    },

    loadInitialData: function() {
        this.app.candle.panel.setLoading(true);

        Ext.Ajax.request({
            url: '/nmdb/original/group/all/all/'+ this.app.candle.N_points,
            success: function(response){
                var text = response.responseText;
                var data=Ext.JSON.decode(text);
                this.app.candle.data=data;
                this.initCandleChart();
                this.initChannelChart();
                this.app.candle.panel.setLoading(false);
            },
            scope: this
        });
    },

    initCandleChart: function() {
        var yAxisPressHeight=100;  // You can change only this one.
        var yAxisOhclHeight=this.app.candle.height -yAxisPressHeight -165; //The 165 cant be changed
        var yAxisOhclTop=yAxisPressHeight +50; //The 50 cant be changed
        /*We hired magicians, they came up with this numbers*/

        var chart = new Highcharts.StockChart({
                    chart: {
                        renderTo: this.app.candle.panel.getEl().dom,
                        zoomType: 'x'
                    },

                    global: {
                        useUTC: true
                    },

                    rangeSelector: {
                        buttons: [{
                            type: 'month',
                            count: 1,
                            text: '1m'
                        },{
                            type: 'all',
                            text: 'All'
                        }],
                        selected: 1,
        				inputEnabled: false
                    },

        			xAxis : {
                        events : {
                            afterSetExtremes : function(event){
                                this.updateCandleData(event.min, event.max);
                            }.bind(this)
        				},
        				minRange: 0.75*(this.app.candle.N_points)/*one Min*/*60*1000,
                        ordinal: false
        			},

        			navigator : {
                        adaptToUpdatedData: false,
                        series : {
                            data : this.app.candle.data[0]
                        }
                    },

                    scrollbar: {
        				liveRedraw: false
        			},

        			yAxis : [{
        				title: {
                            text: 'OHLC'
                        },
                        opposite: false,
                        labels:{
                            x:10
                        },
        				top: yAxisOhclTop,
        				height: yAxisOhclHeight,
        				min: 20,
        				max: 251
        			},{
        				title: {
                            text: 'Presure'
                        },
                        opposite: false,
                        labels:{
                            x:10
                        },
        				height: yAxisPressHeight,
        				offset: 0,
        				min: 880,
        				max: 980
        			}],

        			plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },

                    series:  [{
        				name : 'Uncorrected',				//0
        				type : 'candlestick',
                        color: '#00FFFF',
        				data : this.app.candle.data[0],
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Pressure',	//1
        				type : 'candlestick',
                        color: '#FF8000',
        				data : null,
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Efficiency',	//2
        				type : 'candlestick',
                        color: '#01DF01',
        				data : null,
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Uncorrected',				//3
        				data : null,
                        color: '#00FFFF',
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Pressure',	//4
        				data : null,
                        color: '#FF8000',
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Efficiency',	//5
        				data : null,
                        color: '#01DF01',
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Pressure',					//6
        				visible : true,
        				yAxis: 1,
        				data : this.app.candle.data[3],
        				dataGrouping: {
        					enabled: false
        				}
        			}]
        });

        this.app.candle.chart=chart;
    },

    initChannelChart: function() {
        var chart = new Highcharts.StockChart({
            chart: {
                renderTo: this.app.channel.panel.getEl().dom,
                height: this.app.channel.height,
                width: this.app.channel.width
            },
            title: {
                text: 'Hi there Spikes'
            },
            legend : {
                enabled: true
            },
            scrollbar:{
                enabled: false
            },
            navigator:{
                enabled: false
            },
            rangeSelector: {
                buttons: [],
                inputEnabled: false
            },
            yAxis:[{
                title: {
                    text: 'Values'
                },
                opposite: false,
                labels:{
                    x:10
                }
            }],
            xAxis:{
                ordinal: false
            },
            series: [{
                name: 'ch01',
                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 1
            },
            {
                name: 'ch02',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 2
            },{
                name: 'ch03',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 3
            },{
                name: 'ch04',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 4
            },{
                name: 'ch05',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 5
            },{
                name: 'ch06',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 6
            },{
                name: 'ch07',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 7
            },{
                name: 'ch08',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 8
            },{
                name: 'ch09',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 9
            },{
                name: 'ch10',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 10
            },{
                name: 'ch11',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 11
            },{
                name: 'ch12',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 12
            },{
                name: 'ch13',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 13
            },{
                name: 'ch14',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 14
            },{
                name: 'ch15',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 15
            },{
                name: 'ch16',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 16
            },{
                name: 'ch17',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 17
            },{
                name: 'ch18',

                data: null,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 18
            }]
        });

        this.app.channel.chart=chart;
    },

    LineOrOhcl: function(start, finish, N_points) {
        if ((finish-start)/60<=N_points*4+4)
                    return true; //Line
            return false; //Ohcl
    },

    updateMode: function(start, finish) {
        if (this.LineOrOhcl(start, finish, this.app.candle.N_points) && this.app.candle.mode<3)
                this.app.candle.mode +=3;

            if (!this.LineOrOhcl(start, finish, this.app.candle.N_points) && this.app.candle.mode>=3)
                this.app.candle.mode -=3;
    },

    changeSeries: function(series) {
        if(this.app.candle.mode>=3)
            series +=3;
        this.app.candle.mode=series;
        this.updateSeries();
    },

    updateSeries: function() {
        from_data=this.app.candle.mode%3;
        this.app.candle.chart.series[0].setData([]);
        this.app.candle.chart.series[1].setData([]);
        this.app.candle.chart.series[2].setData([]);
        this.app.candle.chart.series[3].setData([]);
        this.app.candle.chart.series[4].setData([]);
        this.app.candle.chart.series[5].setData([]);
        this.app.candle.chart.series[6].setData(this.app.candle.data[3]);

        this.app.candle.chart.series[this.app.candle.mode].setData(this.app.candle.data[from_data]);
    },

    updateCandleData: function(start, finish) {
        start=Math.round(start/1000);
        finish=Math.round(finish/1000);
        this.updateMode(start, finish);

        var my_url=null;
        if (this.LineOrOhcl(start, finish, this.app.candle.N_points)){
            my_url='/nmdb/original/raw/'+start+'/'+finish;
            Ext.ComponentQuery.query('#Chart2Button')[0].enable(true);
        }else{
            my_url='/nmdb/original/group/'+start+'/'+finish+'/'+this.app.candle.N_points;
            Ext.ComponentQuery.query('#Chart2Button')[0].disable(true);
        }


        this.app.candle.chart.showLoading('Loading data from server...');
        Ext.Ajax.request({
                url: my_url,
                success: function(response){
                    var text = response.responseText;
                    var data=Ext.JSON.decode(text);

                    this.app.candle.data=data;
                    this.updateSeries();

                    this.app.candle.chart.hideLoading();
                },
                scope: this
            });

    },

    updateChannelData: function() {
        var start=Math.round(this.app.candle.chart.xAxis[0].min/1000);
        var finish=Math.round(this.app.candle.chart.xAxis[0].max/1000);
        var my_url='/nmdadb/rawdata/'+start+'/'+finish;

        this.app.channel.chart.showLoading('Loading data from server...');
        Ext.Ajax.request({
            url: my_url,
            success: function(response){
                var text = response.responseText;
                var data=Ext.JSON.decode(text);

                for (var i=0;i<=17;i++){
                    this.app.channel.chart.series[i].setData(data[i]);
                }

                this.app.channel.chart.hideLoading();
            },
            scope: this
        });
    },

    searchInterval: function(start, finish) {
        if (start >= finish){
            alert('Bad interval...');
            return;
        }

        this.app.candle.chart.xAxis[0].setExtremes(
        					this.getTimestamp(start),
        					this.getTimestamp(finish));
    },

    getTimestamp: function(str) {
        var d = str.match(/\d+/g); //extract date parts
        return +new Date(Date.UTC(d[0], d[1] - 1, d[2], d[3], d[4], d[5])); //build Date object
    },

    showCandle: function() {
        this.getNavigationPanel().getLayout().setActiveItem(this.getSpike_Candle_Panel());
        Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeIntervalSearch').show(true);
        Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeChoiceSeries').show(true);
        Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').expand();

        if (!this.app)
            this.Launch();
    },

    showChannel: function() {
        this.getNavigationPanel().getLayout().setActiveItem(this.app.channel.panel);
        Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeIntervalSearch').hide(true);
        Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeChoiceSeries').hide(true);
        this.updateChannelData();
    }

});
