{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "HighStockExtend"
    },
    "designerId": "bf10ac90-f4ac-4d46-8231-db849c28c77f",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "//ZoomOut Events.",
                    "(function (H) {",
                    "    H.wrap(H.Chart.prototype, 'init', function (proceed) {",
                    "        // Run the original proceed method",
                    "        proceed.apply(this, Array.prototype.slice.call(arguments, 1));",
                    "        var chart = this,",
                    "            options = chart.options,",
                    "            zoomType = options.chart.zoomType,",
                    "            container = chart.container,",
                    "            xAxis = chart.xAxis[0],",
                    "            selectFromPixels,",
                    "            selectToPixels,",
                    "            pixelDiff;",
                    "",
                    "",
                    "        if (zoomType === 'x') {",
                    "",
                    "            H.addEvent(container, 'mousedown', function (e) {",
                    "                selectFromPixels = chart.pointer.normalize(e).chartX;",
                    "            });",
                    "",
                    "            H.addEvent(container, 'mouseup', function (e) {",
                    "                selectToPixels = chart.pointer.normalize(e).chartX;",
                    "                pixelDiff = selectToPixels - selectFromPixels;",
                    "            });",
                    "",
                    "            H.addEvent(chart, 'selection', function (e) {",
                    "                console.log(e);",
                    "                if (pixelDiff < 0) {",
                    "                    var min=e.xAxis[0].min;",
                    "                    var max=e.xAxis[0].max;",
                    "                    var sel_dist=max-min;",
                    "",
                    "                    var newMin=min-5*sel_dist;",
                    "                    var newMax=max+5*sel_dist;",
                    "",
                    "                    if (chart.options.navigator.enabled){",
                    "                        var nav;",
                    "                        for (serie in chart.series){",
                    "                            nav=chart.series[serie];",
                    "                            if (chart.series[serie].name==\"Navigator\"){break;}",
                    "                        }",
                    "                        //var nav=chart.series[chart.series.length-1];",
                    "                        var navMin=nav.xAxis.min;",
                    "                        var navMax=nav.xAxis.max;",
                    "",
                    "                        if(navMin > newMin) newMin=navMin;",
                    "                        if(navMax < newMax) newMax=navMax;",
                    "                    }",
                    "",
                    "                    xAxis.setExtremes(newMin, newMax);",
                    "",
                    "                    e.preventDefault();",
                    "                }",
                    "            });",
                    "        }",
                    "    });",
                    "}(Highcharts));",
                    "",
                    "",
                    "//Legend highlight events.",
                    "(function (H) {",
                    "    var each = H.each;",
                    "    H.wrap(H.Legend.prototype, 'renderItem', function (proceed, item) {",
                    "",
                    "        proceed.call(this, item);",
                    "        var isPoint = !!item.series,",
                    "            collection = isPoint ? item.series.points : this.chart.series,",
                    "            groups = isPoint ? ['graphic'] : ['group', 'markerGroup'],",
                    "            element = item.legendGroup.element;",
                    "",
                    "        element.onmouseover = function () {",
                    "            each(collection, function (seriesItem) {",
                    "                if (seriesItem !== item) {",
                    "                    each(groups, function (group) {",
                    "                        seriesItem[group].animate({",
                    "                            opacity: 0.0",
                    "                        }, {",
                    "                            duration: 150",
                    "                        });",
                    "                    });",
                    "                }",
                    "            });",
                    "        };",
                    "        element.onmouseout = function () {",
                    "            each(collection, function (seriesItem) {",
                    "                if (seriesItem !== item) {",
                    "                    each(groups, function (group) {",
                    "                        seriesItem[group].animate({",
                    "                            opacity: 1",
                    "                        }, {",
                    "                            duration: 50",
                    "                        });",
                    "                    });",
                    "                }",
                    "            });",
                    "        };",
                    "",
                    "    });",
                    "}(Highcharts));"
                ]
            },
            "designerId": "cb064c7c-38bd-4d8f-bafa-d5d441af2c1f"
        }
    ]
}