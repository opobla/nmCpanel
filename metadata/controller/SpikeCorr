{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "SpikeCorr"
    },
    "designerId": "88eb544a-095c-436d-8e4c-22c346073b8b",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "Launch",
                "implHandler": [
                    "MyApp.app.spikeCorr={};  // Spike module",
                    "MyApp.app.spikeCorr.panel=this.getSpikeCorrChartPanel();",
                    "MyApp.app.spikeCorr.panelHeight=MyApp.app.spikeCorr.panel.getHeight();",
                    "MyApp.app.spikeCorr.panelWidth=MyApp.app.spikeCorr.panel.getWidth();",
                    "MyApp.app.spikeCorr.N_points=Math.round(MyApp.app.spikeCorr.panelWidth/4);",
                    "MyApp.app.spikeCorr.data=null; //This is given value in loadSpikeData",
                    "MyApp.app.spikeCorr.mode=0;// 0 means candle, uncorrected",
                    "MyApp.app.spikeCorr.letter=65;  //ASCII 'A'",
                    "MyApp.app.spikeCorr.grid=Ext.ComponentQuery.query('#SpikeCorrPanel')[0].down('#MarkedGrid');",
                    "",
                    "MyApp.app.spikeCorr.panelGrid=Ext.ComponentQuery.query('#SpikeCorrGridPanel')[0];",
                    "",
                    "MyApp.app.spikeCorr.panelChannels=this.getSpikeCorrChannelChartPanel();",
                    "MyApp.app.spikeCorr.chartChannels=null;",
                    "",
                    "this.loadSpikeCorrData(MyApp.app.spikeCorr);",
                    ""
                ]
            },
            "designerId": "d9a4e42d-b2cd-4a3b-83c5-fec94f3302f1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "module"
                ],
                "fn": "loadSpikeCorrData",
                "implHandler": [
                    "module.panel.setLoading(true);",
                    "",
                    "Ext.Ajax.request({",
                    "    url: '/nmdb/corrected/group/all/all/'+ module.N_points,",
                    "    success: function(response){",
                    "        var text = response.responseText;",
                    "        data=Ext.JSON.decode(text);",
                    "        module.data=data;",
                    "        this.initSpikeCorrChart(module);",
                    "        MyApp.app.getController(\"Spike\").initSpikeChannelChart(module);",
                    "        module.panel.setLoading(false);",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "designerId": "4910221d-143c-44c4-a7bf-9d73e96ef01d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "module"
                ],
                "fn": "initSpikeCorrChart",
                "implHandler": [
                    "var yAxisPressHeight=100;  // You can change only this one.",
                    "var yAxisOhclHeight=module.panelHeight -yAxisPressHeight -165; //The 165 cant be changed",
                    "var yAxisOhclTop=yAxisPressHeight +50; //The 50 cant be changed",
                    "",
                    "chart = new Highcharts.StockChart({",
                    "    chart: {",
                    "        renderTo: module.panel.getEl().dom,",
                    "",
                    "        zoomType: 'x'",
                    "    },",
                    "",
                    "    global: {",
                    "        useUTC: true",
                    "    },",
                    "",
                    "    rangeSelector: {",
                    "        buttons: [{",
                    "            type: 'month',",
                    "            count: 1,",
                    "            text: '1m'",
                    "        },{",
                    "            type: 'all',",
                    "            text: 'All'",
                    "        }],",
                    "        selected: 1,",
                    "        inputEnabled: false",
                    "    },",
                    "",
                    "    xAxis : {",
                    "        events : {",
                    "            afterSetExtremes : function(event){",
                    "                chart.showLoading('Loading data from server...');",
                    "                start=Math.round(event.min/1000);",
                    "                finish=Math.round(event.max/1000);",
                    "",
                    "                MyApp.app.getController(\"Spike\").updateMode(start, finish, module);",
                    "                MyApp.app.getController(\"SpikeCorr\").updateData(start, finish, module);",
                    "            }",
                    "        },",
                    "        minRange: 0.75*(module.N_points)/*one Min*/*60*1000,",
                    "        ordinal: false",
                    "    },",
                    "",
                    "    navigator : {",
                    "        adaptToUpdatedData: false,",
                    "        series : {",
                    "            data : module.data[0]",
                    "        }",
                    "    },",
                    "",
                    "    scrollbar: {",
                    "        liveRedraw: false",
                    "    },",
                    "",
                    "    yAxis : [{",
                    "        title: {",
                    "            text: 'OHLC'",
                    "        },",
                    "        opposite: false,",
                    "        labels:{",
                    "            x:10",
                    "        },",
                    "        top: yAxisOhclTop,",
                    "        height: yAxisOhclHeight,",
                    "        min: 20,",
                    "        max: 251",
                    "    },{",
                    "        title: {",
                    "            text: 'Presure'",
                    "        },",
                    "        opposite: false,",
                    "        labels:{",
                    "            x:10",
                    "        },",
                    "        height: yAxisPressHeight,",
                    "        offset: 0,",
                    "        min: 880,",
                    "        max: 980",
                    "    }],",
                    "",
                    "    plotOptions: {",
                    "        column: {",
                    "            pointPadding: 0.2,",
                    "            borderWidth: 0",
                    "        }",
                    "    },",
                    "",
                    "    series:  [{",
                    "        name : 'Uncorrected',\t\t\t\t//0",
                    "        type : 'candlestick',",
                    "        data : data[0],",
                    "        dataGrouping: {",
                    "            enabled: false",
                    "        }",
                    "    },{",
                    "        name : 'Corrected for Pressure',\t//1",
                    "        type : 'candlestick',",
                    "        data : null,",
                    "        dataGrouping: {",
                    "            enabled: false",
                    "        }",
                    "    },{",
                    "        name : 'Corrected for Efficiency',\t//2",
                    "        type : 'candlestick',",
                    "        data : null,",
                    "        dataGrouping: {",
                    "            enabled: false",
                    "        }",
                    "    },{",
                    "        name : 'Uncorrected',\t\t\t\t//3",
                    "        marker : {",
                    "            enabled : true,",
                    "            radius : 1",
                    "        },",
                    "        data : null,",
                    "        id: 'Unc',",
                    "        events: {",
                    "            //what happends when a point is clicked",
                    "            click: click",
                    "        },",
                    "        dataGrouping: {",
                    "            enabled: false",
                    "        }",
                    "    },{",
                    "        name : 'Corrected for Pressure',\t//4",
                    "        data : null,",
                    "        events: {",
                    "            //what happends when a point is clicked",
                    "            click: click",
                    "        },",
                    "        dataGrouping: {",
                    "            enabled: false",
                    "        }",
                    "    },{",
                    "        name : 'Corrected for Efficiency',\t//5",
                    "        data : null,",
                    "        events: {",
                    "            //what happends when a point is clicked",
                    "            click: click",
                    "        },",
                    "        dataGrouping: {",
                    "            enabled: false",
                    "        }",
                    "    },{",
                    "        name : 'Pressure',\t\t\t\t\t//6",
                    "        visible : true,",
                    "        yAxis: 1,",
                    "        data : data[3],",
                    "        dataGrouping: {",
                    "            enabled: false",
                    "        }",
                    "    },{",
                    "        name : 'Flags',                    //7",
                    "        type: 'flags',",
                    "        data: null,",
                    "        yAxis: 1,",
                    "        shape: 'squarepin',",
                    "        width : 16",
                    "    }]",
                    "});",
                    "",
                    "function click(event){",
                    "    for (var i=0;i<module.data[0].length;i++){",
                    "        if (module.data[0][i][0]==event.point.x){",
                    "            break;",
                    "        }",
                    "    }",
                    "    var ClickedData=[module.data[0][i][0] , module.data[0][i][1] , module.data[1][i][1], module.data[2][i][1] , module.data[3][i][1]];",
                    "    module.chart.series[7].addPoint({x:event.point.x,title:String.fromCharCode(module.letter)});",
                    "",
                    "    module.chart.redraw();",
                    "",
                    "    module.grid.store.add({",
                    "        \"label\": String.fromCharCode(module.letter),",
                    "        \"start_date_time\": new Date(ClickedData[0]+new Date(ClickedData[0]).getTimezoneOffset()*60*1000),",
                    "        \"un\": ClickedData[1],",
                    "        \"ce\": ClickedData[2],",
                    "        \"cp\": ClickedData[3],",
                    "        \"pr\": ClickedData[4],",
                    "        \"ver\": 0});",
                    "",
                    "    module.letter+=1;",
                    "    if(module.letter==91)module.letter=97;",
                    "    if(module.letter==123)module.letter=65;",
                    "}",
                    "",
                    "module.chart=chart;",
                    ""
                ]
            },
            "designerId": "d62b4bdf-4b8a-460e-93e1-11dbe0406e2d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "start, finish, module"
                ],
                "fn": "updateData",
                "implHandler": [
                    "var my_url=null;",
                    "if (MyApp.app.getController(\"Spike\").LineOrOhcl(start, finish, module.N_points)){",
                    "    my_url='/nmdb/corrected/raw/'+start+'/'+finish;",
                    "    Ext.ComponentQuery.query('#CorrChart2Button')[0].enable(true);",
                    "}else{",
                    "    my_url='/nmdb/corrected/group/'+start+'/'+finish+'/'+module.N_points;",
                    "    Ext.ComponentQuery.query('#CorrChart2Button')[0].disable(true);",
                    "}",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "        url: my_url,",
                    "        success: function(response){",
                    "            var text = response.responseText;",
                    "            data=Ext.JSON.decode(text);",
                    "",
                    "            module.data=data;",
                    "            MyApp.app.getController(\"Spike\").updateSeries(module);",
                    "",
                    "            module.chart.hideLoading();",
                    "            module.chart.hideLoading();",
                    "",
                    "        },",
                    "        scope: this",
                    "    });",
                    ""
                ]
            },
            "designerId": "4032a48d-67ae-437b-8100-7c6893828e80"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "module, rowIndex"
                ],
                "fn": "removeFromGrid",
                "implHandler": [
                    "//First of all start getting a reference of the grid.",
                    "var markedGrid=module.grid;",
                    "",
                    "//Then get a reference of the tagSeries",
                    "var tagSeries = module.chart.series[7].data;",
                    "",
                    "//Find the tag in the tagSeries and remove it from the tagSeries",
                    "for(x=0;x<tagSeries.length;x++){",
                    "    if(tagSeries[x].title==markedGrid.store.getAt(rowIndex).data.label){",
                    "        tagSeries[x].remove(true);",
                    "        break;",
                    "    }",
                    "}",
                    "",
                    "//Finaly remove from the grids store.",
                    "markedGrid.store.removeAt(rowIndex);"
                ]
            },
            "designerId": "f4356ed4-e6d7-4cea-a060-b086c4add15c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "module"
                ],
                "fn": "submitGrid",
                "implHandler": [
                    "//Http post request to the specified url.",
                    "//Post params ==> markedGrid data",
                    "module.grid.store.sync({",
                    "    url: '/nmdb/marknull',",
                    "    //Actions we take when the request is successful.",
                    "    success: function(response){",
                    "        var text = response.operations[0].request.scope.reader.jsonData;",
                    "",
                    "        //Clear and refresh store ==> Expexted empty store..",
                    "        module.grid.store.clearData();",
                    "        module.grid.getView().refresh();",
                    "",
                    "        //Clear tags from the chart and refresh the chart with the new data",
                    "        module.chart.series[7].setData([]);",
                    "        module.chart.xAxis[0].setExtremes();",
                    "        module.letter=65;",
                    "",
                    "",
                    "        //Alert everything went ok..",
                    "        alert(text.messege);",
                    "    },",
                    "    scope: this",
                    "});"
                ]
            },
            "designerId": "b9b4ce9a-8c83-4f70-a864-97cd171d01a3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "module"
                ],
                "fn": "showGrid",
                "implHandler": [
                    "module.panelGrid.setHeight(300);",
                    "module.panelGrid.setWidth(600);",
                    "module.panelGrid.setPosition(module.panelWidth -600 -10, 10);",
                    "module.panelGrid.show();"
                ]
            },
            "designerId": "5935e3fe-4f6b-4342-b835-421abc185b4d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "module"
                ],
                "fn": "clearGrid",
                "implHandler": [
                    "module.chart.series[7].setData([]);",
                    "module.grid.store.removeAll();",
                    "module.letter=65;",
                    ""
                ]
            },
            "designerId": "f653afe0-f751-4c60-93c2-9ace0a2590d3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "module"
                ],
                "fn": "closeGrid",
                "implHandler": [
                    "module.panelGrid.hide();"
                ]
            },
            "designerId": "875b8fcd-73ca-4fa0-ac3b-020c83958b6e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showSpikeCorr",
                "implHandler": [
                    "this.getNavigationPanel().getLayout().setActiveItem(this.getSpikeCorrChartPanel().up());",
                    "Ext.ComponentQuery.query('#Controls')[0].down('#SpikeCorrControls').down('#SpikeCorrIntervalSearch').show(true);",
                    "Ext.ComponentQuery.query('#Controls')[0].down('#SpikeCorrControls').down('#SpikeCorrChoiceSeries').show(true);",
                    "Ext.ComponentQuery.query('#Controls')[0].down('#SpikeCorrControls').down('#SpikeCorrSelPoints').show(true);",
                    "Ext.ComponentQuery.query('#Controls')[0].down('#SpikeCorrControls').expand();",
                    "",
                    "if (!MyApp.app.spikeCorr)",
                    "    MyApp.app.getController(\"SpikeCorr\").Launch();",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "7f2eda92-4b74-43b7-be42-ea545b74d2a8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showSpikeChannel",
                "implHandler": [
                    "this.getNavigationPanel().getLayout().setActiveItem(MyApp.app.spikeCorr.panelChannels);",
                    "Ext.ComponentQuery.query('#Controls')[0].down('#SpikeCorrControls').down('#SpikeCorrIntervalSearch').hide(true);",
                    "Ext.ComponentQuery.query('#Controls')[0].down('#SpikeCorrControls').down('#SpikeCorrChoiceSeries').hide(true);",
                    "Ext.ComponentQuery.query('#Controls')[0].down('#SpikeCorrControls').down('#SpikeCorrSelPoints').hide(true);",
                    "MyApp.app.getController(\"Spike\").updateChannelData(MyApp.app.spikeCorr);",
                    "",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "44e47bb4-92fa-4e09-9bcf-5bd1d3bc45f3"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "SpikeCorrChartPanel",
                "selector": "#SpikeCorrChartPanel"
            },
            "designerId": "dbdefdb6-61a2-4a3b-86dc-8d355e531b3a"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "navigationPanel",
                "selector": "#NavigationPanel"
            },
            "designerId": "60c7949c-3c52-445d-9950-509e5045a931"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "SpikeCorrChannelChartPanel",
                "selector": "#SpikeCorrChannelChartPanel"
            },
            "designerId": "6785fc41-fab5-4edf-84ba-963ec41f8ee1"
        }
    ]
}